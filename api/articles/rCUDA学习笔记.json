{"title":"rCUDA学习笔记","uid":"90df758e61e83a191c1ee407e9e9a458","slug":"rCUDA学习笔记","date":"2022-12-09T01:31:02.000Z","updated":"2022-12-10T02:59:26.581Z","comments":true,"path":"api/articles/rCUDA学习笔记.json","keywords":null,"cover":"/covers/rCUDA学习笔记.png","content":"<h1 id=\"rCUDA学习笔记\"><a href=\"#rCUDA学习笔记\" class=\"headerlink\" title=\"rCUDA学习笔记\"></a>rCUDA学习笔记</h1><h2 id=\"工作背景\"><a href=\"#工作背景\" class=\"headerlink\" title=\"工作背景\"></a>工作背景</h2><p>人CUDA是巴仑西亚理工大学和西班牙海梅一世大学开发的一个工作, 到现在已经有十余年的历史, 并且目前仍在维护. 欧洲的很多工作都是这样子默默无闻, 但是能坚持开发很久的工作, 并且在很久以后突然产生它的用途被大家所瞩目, 这一点真的很值得敬佩. 感觉这样的精神就是我所理解的学者精神.</p>\n<h2 id=\"主要内容\"><a href=\"#主要内容\" class=\"headerlink\" title=\"主要内容\"></a>主要内容</h2><p>核心思想是类似远程过程调用, 将使用GPU的核函数发送到远程的GPU端供GPU使用, 这样做主要的开销在数据传输的通信上, 作者在文中对数据传输部分做了很大的优化. 但最终的运行效果差强人意, 相对于本地未初始化的节点表现得还挺好的, 但是如果本地已经初始化, 远程还是比不过本地的, </p>\n<p><img src=\"/post/rCUDA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20221210105200418.png\" alt=\"image-20221210105200418\"></p>\n<p>不过思想还是可以借鉴, 将GPU任务发送给目标进程执行, 减少显存的占用同时实现隔离, 但是这样扩展性仍然受限, 有多少个GPU就有多少个进程, 这些进程之间并行执行, 但是进程内部是串行的.</p>\n","text":"rCUDA学习笔记工作背景人CUDA是巴仑西亚理工大学和西班牙海梅一世大学开发的一个工作, 到现在已经有十余年的历史, 并且目前仍在维护. 欧洲的很多工作都是这样子默默无闻, 但是能坚持开发很久的工作, 并且在很久以后突然产生它的用途被大家所瞩目, 这一点真的很值得敬佩. 感觉这...","link":"","photos":[],"count_time":{"symbolsCount":403,"symbolsTime":"1 mins."},"categories":[{"name":"索道集","slug":"索道集","count":3,"path":"api/categories/索道集.json"}],"tags":[{"name":"体系结构","slug":"体系结构","count":3,"path":"api/tags/体系结构.json"},{"name":"GPU","slug":"GPU","count":2,"path":"api/tags/GPU.json"},{"name":"CUDA","slug":"CUDA","count":1,"path":"api/tags/CUDA.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#rCUDA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0\"><span class=\"toc-text\">rCUDA学习笔记</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E4%BD%9C%E8%83%8C%E6%99%AF\"><span class=\"toc-text\">工作背景</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E8%A6%81%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">主要内容</span></a></li></ol></li></ol>","author":{"name":"Gardenia","slug":"blog-author","avatar":"/features/profile.jpg","link":"/","description":"People love what other people are passionate about.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Ray学习笔记","uid":"3e8302fb4ea7b33282991d202140dabf","slug":"Ray学习笔记","date":"2022-12-21T09:14:02.000Z","updated":"2022-12-21T09:47:26.765Z","comments":true,"path":"api/articles/Ray学习笔记.json","keywords":null,"cover":"https://docs.ray.io/en/latest/_images/what-is-ray-padded.svg","text":"Ray学习笔记概念 概念 含义 tasks 在Ray中, 任务是很轻量级的, 一个task指的实际上是一个remote函数 worker 可以理解成一个python进程 actors 将task从函数扩展到了类, 当创建一个actor的时候, 同时还会创建一个新的worker, ...","link":"","photos":[],"count_time":{"symbolsCount":526,"symbolsTime":"1 mins."},"categories":[{"name":"索道集","slug":"索道集","count":3,"path":"api/categories/索道集.json"}],"tags":[{"name":"体系结构","slug":"体系结构","count":3,"path":"api/tags/体系结构.json"},{"name":"系统管理","slug":"系统管理","count":2,"path":"api/tags/系统管理.json"},{"name":"计算框架","slug":"计算框架","count":1,"path":"api/tags/计算框架.json"}],"author":{"name":"Gardenia","slug":"blog-author","avatar":"/features/profile.jpg","link":"/","description":"People love what other people are passionate about.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"为linux设置回收站","uid":"c1c6c992691a014e062c4081c98a903e","slug":"为linux设置回收站","date":"2022-11-21T03:12:03.000Z","updated":"2022-11-21T03:44:23.923Z","comments":true,"path":"api/articles/为linux设置回收站.json","keywords":null,"cover":"https://ts1.cn.mm.bing.net/th/id/R-C.958dfd89335c457ac3916a3874a0cc97?rik=3hj8iuWAzDhHCw&riu=http%3a%2f%2fimg.aiimg.com%2fuploads%2fallimg%2f150527%2f280082-15052G05152.jpg&ehk=5BcTxGdDzwrborjiw%2b5Fpj34Y7eyHyc19fgRChPG4YI%3d&risl=&pid=ImgRaw&r=0","text":"为Linux设置回收站昨天手快误删了一个很重要的文件夹, 经过一系列的操作最后发现确实是找不回来了, 所以痛定思痛一定要为Linux搭建一个回收站, 参考了网上很多教程, 现在来记录一下搭建过程. 原理原理其实很简单, 就是自定义一个回收站文件夹, 然后将删除指令自定义成将文件移...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"清浅录","slug":"清浅录","count":3,"path":"api/categories/清浅录.json"}],"tags":[{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"},{"name":"系统管理","slug":"系统管理","count":2,"path":"api/tags/系统管理.json"}],"author":{"name":"Gardenia","slug":"blog-author","avatar":"/features/profile.jpg","link":"/","description":"People love what other people are passionate about.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}