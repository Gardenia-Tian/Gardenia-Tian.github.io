{"title":"CTR prediction","uid":"00db2d90ca8a806f19e798dced98cccf","slug":"CTR-prediction","date":"2023-02-09T11:33:09.000Z","updated":"2023-02-10T05:57:27.422Z","comments":true,"path":"api/articles/CTR-prediction.json","keywords":null,"cover":"https://github.com/PaddlePaddle/PaddleRec/raw/master/doc/imgs/rec-overview.png","content":"<h1 id=\"CTR-Prediction\"><a href=\"#CTR-Prediction\" class=\"headerlink\" title=\"CTR Prediction\"></a>CTR Prediction</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>本文参考:</p>\n<p>[BarsCTR:]: <a href=\"https://arxiv.org/abs/2009.05794\">https://arxiv.org/abs/2009.05794</a>\t“《BarsCTR: Open Benchmarking for Click-Through Rate Prediction》”</p></blockquote>\n<p>Click-through rate (CTR) prediction点击率预测的目标是预测用户点击给定商品的概率。如何提高CTR预测的准确性仍然是一个具有挑战性的研究问题。与其他数据类型(如图像和文本)相比，CTR预测问题中的数据通常采用表格格式，由多个不同字段的数值、类别或多值(或序列)特征组成。<strong>样本量通常很大，但特征空间高度稀疏。</strong>例如，Google Play中的应用推荐涉及数十亿个样本和数百万个特征。</p>\n<h3 id=\"CTR预测模型的组成\"><a href=\"#CTR预测模型的组成\" class=\"headerlink\" title=\"CTR预测模型的组成\"></a>CTR预测模型的组成</h3><p>一般来说，CTR预测模型由以下几个关键部分组成:</p>\n<ol>\n<li><p>Feature Embedding: CTR预测的输入实例通常包含三组特征，即，用户简介，项目简介，以及上下文信息. 每组特征都有一些字段，如下所示:</p>\n<ul>\n<li>用户简介:年龄、性别、城市、职业、兴趣等</li>\n<li>商品简介:商品ID、类别、标签、品牌、卖家、价格等。</li>\n<li>上下文:工作日、时间、位置、槽位号等。</li>\n</ul>\n<p>每个字段中的特征可以是类别、数值或多值的(例如，单个项目的多个标记)。由于大多数特征非常稀疏，经过one-hot或multi-hot编码后形成高维特征空间，通常采用特征嵌入将这些特征映射到低维密集向量中。下面我们总结了类别，数值，多值这三种特征的嵌入过程。</p>\n<ul>\n<li>类别：对于类别<code>i</code>,给定one-hot特征向量$x_i$, 嵌入矩阵$V_i \\in R^{d\\times n}$, <code>d</code>是嵌入维度, <code>n</code>是字母表个数(类别个数). 嵌入后的向量是<code>d * 1</code>的. </li>\n<li>数值: 对于数值特征<code>j</code>, 我们有多种嵌入方式:<ul>\n<li>通过手动设计(例如，将13 ~ 19岁的年龄分组为青少年)或通过在数字特征上训练决策树(例如，GBDT)，然后将它们以类别特征的方式嵌入;</li>\n<li>给定一个规范化的标量值$x_j$, $e_j &#x3D; v_j x_j, \\quad v_j \\in R^d$是所有特征<code>j</code>共享的嵌入向量; </li>\n<li>除了将每个值存储到一个类别中或为每个数值字段分配一个向量, 还可以利用<code>AutoDis</code>, 一种数值特征嵌入方法，利用元嵌入矩阵对数值特征进行动态类别化和嵌入计算。</li>\n</ul>\n</li>\n<li>多值: 对于多值特征<code>h</code>, 每个特征都可以表示为一个序列. $e_h &#x3D; V_h[x_{h_1},x_{h_2},x_{h_3},…,x_{h_k}] \\in R^{d \\times k}$, 其中$x_{h_k}$是一个one-hot向量, <code>k</code>表示序列的最大长度, 嵌入结果$e_h$可以被进一步嵌入为一个<code>d</code>维向量(均值池化&#x2F;求和池化). 进一步的潜在改进是应用序列模型，如DIN中的目标注意力和DIEN中的GRU，来聚合多值行为序列特征。</li>\n</ul>\n</li>\n<li><p>Feature Interaction: 在特征嵌入后，可以直接应用任何分类模型进行CTR预测。然而，对于CTR预测任务，特征之间的相互作用(又称特征连接, feature conjunctions)是提高分类性能的核心。在因子分解机(factorization machines, FM)中指明，内积为捕获成对特征相互作用的简单而有效的方法。自从FM的成功以来，大量的研究都致力于以不同的方式捕捉特征之间的相互作用。自从FM的成功以来，大量的研究都致力于以不同的方式捕捉特征之间的相互作用。此外，目前大多数工作研究一种将显式和隐式特征交互与普通全连接网络(即mlp)结合起来的方法。</p>\n</li>\n<li><p>Loss Function: 二元交叉熵损失在CTR预测任务中被广泛应用，其定义如下;<br>$$<br>L &#x3D; -\\frac{1}{N}\\Sigma_D (y\\ log\\hat y + (1-y)log(1-\\hat y))<br>$$<br>其中<code>D</code>是有<code>N</code>个样本的数据集, <code>y</code>和$\\hat y$分别表示真实的和估计的点击概率, $\\hat y &#x3D; \\sigma (\\phi (x)),\\quad \\phi(x)$代表模型函数, CTR预测建模的核心在于如何构建模型$\\phi(x)$, 并通过训练数据学习模型参数.</p>\n</li>\n</ol>\n<h3 id=\"经典模型\"><a href=\"#经典模型\" class=\"headerlink\" title=\"经典模型\"></a>经典模型</h3><p>本节详见参考论文</p>\n<ol>\n<li>Shallow Models: 工业CTR预测任务通常具有大规模的数据。因此，浅层模型因其简单高效而得到了广泛的应用。即使在今天，LR[40]和FM[39]仍然是工业中部署的两个强大的基线模型。(e.g. LR, FM, FFM, HOFM, FwFM, LorentzFM)</li>\n<li>Deep Models: 目前，深度神经网络在CTR预测方面得到了广泛的研究和应用。与浅模型相比，深度模型在利用非线性激活函数捕捉复杂的高阶特征交互方面更强大，通常会产生更好的性能。然而，在实际应用中，效率已成为深度模型规模化的主要瓶颈。(e.g. DNN, CCPM, Wide&amp;Deep, IPNN, DeepCross, NFM, AFM, DeepFM, DCN, xDeepFM, HFM+, FGCNN, AutoInt+, FiGNN, ONN, FiBiNET, AFN+, InterHAt)</li>\n</ol>\n","feature":true,"text":"CTR Prediction 本文参考: [BarsCTR:]: https://arxiv.org/abs/2009.05794 “《BarsCTR: Open Benchmarking for Click-Through Rate Prediction》” Click-thr...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"索道集","slug":"索道集","count":3,"path":"api/categories/索道集.json"}],"tags":[{"name":"推荐系统","slug":"推荐系统","count":1,"path":"api/tags/推荐系统.json"},{"name":"机器学习","slug":"机器学习","count":1,"path":"api/tags/机器学习.json"},{"name":"神经网络","slug":"神经网络","count":1,"path":"api/tags/神经网络.json"},{"name":"人工智能","slug":"人工智能","count":1,"path":"api/tags/人工智能.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#CTR-Prediction\"><span class=\"toc-text\">CTR Prediction</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CTR%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B%E7%9A%84%E7%BB%84%E6%88%90\"><span class=\"toc-text\">CTR预测模型的组成</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%8F%E5%85%B8%E6%A8%A1%E5%9E%8B\"><span class=\"toc-text\">经典模型</span></a></li></ol></li></ol></li></ol>","author":{"name":"Gardenia","slug":"blog-author","avatar":"/features/profile.jpg","link":"/","description":"People love what other people are passionate about.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"Ray学习笔记","uid":"3e8302fb4ea7b33282991d202140dabf","slug":"Ray学习笔记","date":"2022-12-21T09:14:02.000Z","updated":"2022-12-21T09:47:26.765Z","comments":true,"path":"api/articles/Ray学习笔记.json","keywords":null,"cover":"https://docs.ray.io/en/latest/_images/what-is-ray-padded.svg","text":"Ray学习笔记概念 概念 含义 tasks 在Ray中, 任务是很轻量级的, 一个task指的实际上是一个remote函数 worker 可以理解成一个python进程 actors 将task从函数扩展到了类, 当创建一个actor的时候, 同时还会创建一个新的worker, ...","link":"","photos":[],"count_time":{"symbolsCount":526,"symbolsTime":"1 mins."},"categories":[{"name":"索道集","slug":"索道集","count":3,"path":"api/categories/索道集.json"}],"tags":[{"name":"体系结构","slug":"体系结构","count":4,"path":"api/tags/体系结构.json"},{"name":"系统管理","slug":"系统管理","count":2,"path":"api/tags/系统管理.json"},{"name":"计算框架","slug":"计算框架","count":1,"path":"api/tags/计算框架.json"}],"author":{"name":"Gardenia","slug":"blog-author","avatar":"/features/profile.jpg","link":"/","description":"People love what other people are passionate about.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}