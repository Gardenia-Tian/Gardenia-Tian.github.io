{"title":"为linux设置回收站","uid":"c1c6c992691a014e062c4081c98a903e","slug":"为linux设置回收站","date":"2022-11-21T03:12:03.000Z","updated":"2022-11-21T03:44:23.923Z","comments":true,"path":"api/articles/为linux设置回收站.json","keywords":null,"cover":"https://ts1.cn.mm.bing.net/th/id/R-C.958dfd89335c457ac3916a3874a0cc97?rik=3hj8iuWAzDhHCw&riu=http%3a%2f%2fimg.aiimg.com%2fuploads%2fallimg%2f150527%2f280082-15052G05152.jpg&ehk=5BcTxGdDzwrborjiw%2b5Fpj34Y7eyHyc19fgRChPG4YI%3d&risl=&pid=ImgRaw&r=0","content":"<h1 id=\"为Linux设置回收站\"><a href=\"#为Linux设置回收站\" class=\"headerlink\" title=\"为Linux设置回收站\"></a>为Linux设置回收站</h1><p>昨天手快误删了一个很重要的文件夹, 经过一系列的操作最后发现确实是找不回来了, 所以痛定思痛一定要为Linux搭建一个回收站, 参考了网上很多教程, 现在来记录一下搭建过程.</p>\n<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>原理其实很简单, 就是自定义一个回收站文件夹, 然后将删除指令自定义成将文件移动到回收站里, 再设置一个定时来定期清空回收站文件夹.</p>\n<h2 id=\"操作流程\"><a href=\"#操作流程\" class=\"headerlink\" title=\"操作流程\"></a>操作流程</h2><h3 id=\"创建回收站文件夹\"><a href=\"#创建回收站文件夹\" class=\"headerlink\" title=\"创建回收站文件夹\"></a>创建回收站文件夹</h3><p>我把回收站创建在我的账号的根目录下了, 并且希望平时隐藏, 所以指令如下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> ~/.trash<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"回收站相关的命令进行定义\"><a href=\"#回收站相关的命令进行定义\" class=\"headerlink\" title=\"回收站相关的命令进行定义\"></a>回收站相关的命令进行定义</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> ~/.bashrc_trash<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>创建好<code>bashrc_trash</code>文件之后, 在里面添加如下内容</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 为rm重定位为trash的命令, 当执行rm的时候自动执行trash函数</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">rm</span><span class=\"token operator\">=</span>trash\n<span class=\"token comment\"># 同上</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">r</span><span class=\"token operator\">=</span>trash\n<span class=\"token comment\"># 列出回收站的内容</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">rl</span><span class=\"token operator\">=</span><span class=\"token string\">'ls ~/.trash'</span>\n<span class=\"token comment\"># 撤销删除</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">ur</span><span class=\"token operator\">=</span>undelfile\n\n<span class=\"token comment\"># 撤销删除, 就是将回收站中的内容移动回去</span>\n<span class=\"token function-name function\">undelfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n <span class=\"token function\">mv</span> <span class=\"token parameter variable\">-i</span> ~/.trash/<span class=\"token punctuation\">\\</span><span class=\"token variable\">$@</span> ./\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\"># 删除, 就是将当前文件夹移到回收站里, 注意mv指令没有-r参数, 所以使用的时候不用rm -rf, 直接rm -f或者rm就可以</span>\n<span class=\"token function-name function\">trash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n <span class=\"token function\">mv</span> <span class=\"token variable\">$@</span> ~/.trash/\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\"># 清空回收站, 添加确认操作</span>\n<span class=\"token function-name function\">cleartrash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n <span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"clear sure?[n]\"</span> confirm<span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">[</span> <span class=\"token variable\">$confirm</span> <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$confirm</span> <span class=\"token operator\">==</span> <span class=\"token string\">'Y'</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> /bin/rm <span class=\"token parameter variable\">-rf</span> ~/.trash/*\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\"># 不需要确认的清空回收站, 用于定时清空, 事实上也可以给cleartrash()配一个参数, 这个以后要是有时间可以再搞一下</span>\n<span class=\"token function-name function\">CLEARTRASH</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n /bin/rm <span class=\"token parameter variable\">-rf</span> ~/.trash/*\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"将自定义的指令添加到-bashrc\"><a href=\"#将自定义的指令添加到-bashrc\" class=\"headerlink\" title=\"将自定义的指令添加到.bashrc\"></a>将自定义的指令添加到.bashrc</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> ~/.bashrc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>打开<code>~/.bashrc</code>之后在其中添加如下指令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># add trash</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-f</span> <span class=\"token string\">\"~/.bashrc_trash\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">.</span> ~/.bashrc_trash\n<span class=\"token keyword\">fi</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这样每次启动一个终端就会自动加载我们自定义的指令</p>\n<h3 id=\"定期清空文件夹\"><a href=\"#定期清空文件夹\" class=\"headerlink\" title=\"定期清空文件夹\"></a>定期清空文件夹</h3><p>其实到上一步就已经可以使用回收站了, 但是我们希望回收站更完善一点, 能够定时清空回收站, 这样就不用我们手动管理回收站中的内容了, 所以再设置一个定时清空功能. 这个功能要用到<code>crontab </code>指令, Linux <code>crontab</code> 是用来定期执行程序的命令, <code>-e</code>参数可以执行文字编辑器来设定时程表。首先输入如下指令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">crontab</span> <span class=\"token parameter variable\">-e</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p> 之后会进入到&#x2F;tmp&#x2F;crontab.xFcuCa&#x2F;crontab, 这个如果不指定用户默认是为自己的用户配置的.</p>\n<p>之后在里面添加</p>\n<pre class=\"line-numbers language-shel\" data-language=\"shel\"><code class=\"language-shel\">0 0 * * 0 CLEARTRASH<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这句话的含义是每周日零点清空回收站, 前面的五位数字用来指定时间, 含义如下</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">*    *    *    *    *\n-    -    -    -    -\n|    |    |    |    |\n|    |    |    |    +----- 星期中星期几 (0 - 6) (星期天 为0)\n|    |    |    +---------- 月份 (1 - 12) \n|    |    +--------------- 一个月中的第几天 (1 - 31)\n|    +-------------------- 小时 (0 - 23)\n+------------------------- 分钟 (0 - 59)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>那么到此位置我们回收站的配置就完成了, 其实还有更好的方式, 可以让回收站定期清空指定日期以前的数据, 这样安全性会更好一点, 如果以后有时间, 我们就再折腾一下那个方案, 现在的版本也可以实现一个较为安全的<code>rm</code>操作, 妈妈再也不用担心我手快啦!</p>\n","text":"为Linux设置回收站昨天手快误删了一个很重要的文件夹, 经过一系列的操作最后发现确实是找不回来了, 所以痛定思痛一定要为Linux搭建一个回收站, 参考了网上很多教程, 现在来记录一下搭建过程. 原理原理其实很简单, 就是自定义一个回收站文件夹, 然后将删除指令自定义成将文件移...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"清浅录","slug":"清浅录","count":3,"path":"api/categories/清浅录.json"}],"tags":[{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"},{"name":"系统管理","slug":"系统管理","count":2,"path":"api/tags/系统管理.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%BALinux%E8%AE%BE%E7%BD%AE%E5%9B%9E%E6%94%B6%E7%AB%99\"><span class=\"toc-text\">为Linux设置回收站</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">原理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">操作流程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E5%9B%9E%E6%94%B6%E7%AB%99%E6%96%87%E4%BB%B6%E5%A4%B9\"><span class=\"toc-text\">创建回收站文件夹</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9B%9E%E6%94%B6%E7%AB%99%E7%9B%B8%E5%85%B3%E7%9A%84%E5%91%BD%E4%BB%A4%E8%BF%9B%E8%A1%8C%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">回收站相关的命令进行定义</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B0%86%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84%E6%8C%87%E4%BB%A4%E6%B7%BB%E5%8A%A0%E5%88%B0-bashrc\"><span class=\"toc-text\">将自定义的指令添加到.bashrc</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E6%9C%9F%E6%B8%85%E7%A9%BA%E6%96%87%E4%BB%B6%E5%A4%B9\"><span class=\"toc-text\">定期清空文件夹</span></a></li></ol></li></ol></li></ol>","author":{"name":"Gardenia","slug":"blog-author","avatar":"/features/profile.jpg","link":"/","description":"People love what other people are passionate about.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"2022-11-22随笔","uid":"5052b98c38c353e1be9ceb4ccea21b85","slug":"2022-11-22随笔","date":"2022-11-22T01:48:09.000Z","updated":"2022-11-22T02:30:17.907Z","comments":true,"path":"api/articles/2022-11-22随笔.json","keywords":null,"cover":"/covers/22-11-22随笔.jpg","text":"22-11-22随笔最近有一点点不开心, 觉得自己的状态特别拧巴. 课题被同学批评，说问题没有想清楚，怎么做，做什么都没有搞清楚就贸然上手了。说自己搞这个很难出成果，而且基本做不下去，总之就是各种被批评。更难受的是我不知道怎么反驳他们，我很想为自己的课题争取，为他辩解，但是我什么...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"陶然集","slug":"陶然集","count":4,"path":"api/categories/陶然集.json"}],"tags":[{"name":"随笔","slug":"随笔","count":4,"path":"api/tags/随笔.json"}],"author":{"name":"Gardenia","slug":"blog-author","avatar":"/features/profile.jpg","link":"/","description":"People love what other people are passionate about.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"RDMA技术解读","uid":"0f7d08163e7123e37a424c72e1969a8c","slug":"RDMA技术解读","date":"2022-11-18T13:11:09.000Z","updated":"2022-11-18T13:46:16.671Z","comments":true,"path":"api/articles/RDMA技术解读.json","keywords":null,"cover":"https://img-blog.csdnimg.cn/1b2704ac4511494e8c4c1348d7ad4529.png","text":"RDMA技术解读本文参考技术蛋老师讲解RDMA的视频, It_server技术分享的视频侵删 传统Socket通信 用户将应用发送出去, 需要先到操作系统内核, 再到网络接口, 然后在接收方收到信息再次经过操作系统内核, 并在用户态分析数据. RDMA通信模式 绕过内核态, 直接...","link":"","photos":[],"count_time":{"symbolsCount":632,"symbolsTime":"1 mins."},"categories":[{"name":"清浅录","slug":"清浅录","count":3,"path":"api/categories/清浅录.json"}],"tags":[{"name":"体系结构","slug":"体系结构","count":3,"path":"api/tags/体系结构.json"},{"name":"网络","slug":"网络","count":1,"path":"api/tags/网络.json"}],"author":{"name":"Gardenia","slug":"blog-author","avatar":"/features/profile.jpg","link":"/","description":"People love what other people are passionate about.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}